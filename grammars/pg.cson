'scopeName': 'source.pg'
'name': 'PG'
'fileTypes': [
  'pg'
  'PG'
]
'patterns': [
  {
    'include': '#line_comment'
  }
  {
    'begin': '^='
    'captures':
      '0':
        'name': 'punctuation.definition.comment.pg'
    'end': '^=cut'
    'name': 'comment.block.documentation.pg'
  }
  {
    'include': '#variable'
  }
  {
    'applyEndPatternLast': 1
    'begin': '\\b(?=qr\\s*[^\\s\\w])'
    'comment': 'string.regexp.compile.pg'
    'end': '((([egimosxradlupc]*)))(?=(\\s+\\S|\\s*[;\\,\\#\\{\\}\\)]|$))'
    'endCaptures':
      '1':
        'name': 'string.regexp.compile.pg'
      '2':
        'name': 'punctuation.definition.string.pg'
      '3':
        'name': 'keyword.control.regexp-option.pg'
    'patterns': [
      {
        'begin': '(qr)\\s*\\{'
        'captures':
          '0':
            'name': 'punctuation.definition.string.pg'
          '1':
            'name': 'support.function.pg'
        'end': '\\}'
        'name': 'string.regexp.compile.nested_braces.pg'
        'patterns': [
          {
            'include': '#escaped_char'
          }
          {
            'include': '#variable'
          }
          {
            'include': '#nested_braces_interpolated'
          }
        ]
      }
      {
        'begin': '(qr)\\s*\\['
        'captures':
          '0':
            'name': 'punctuation.definition.string.pg'
          '1':
            'name': 'support.function.pg'
        'end': '\\]'
        'name': 'string.regexp.compile.nested_brackets.pg'
        'patterns': [
          {
            'include': '#escaped_char'
          }
          {
            'include': '#variable'
          }
          {
            'include': '#nested_brackets_interpolated'
          }
        ]
      }
      {
        'begin': '(qr)\\s*<'
        'captures':
          '0':
            'name': 'punctuation.definition.string.pg'
          '1':
            'name': 'support.function.pg'
        'end': '>'
        'name': 'string.regexp.compile.nested_ltgt.pg'
        'patterns': [
          {
            'include': '#escaped_char'
          }
          {
            'include': '#variable'
          }
          {
            'include': '#nested_ltgt_interpolated'
          }
        ]
      }
      {
        'begin': '(qr)\\s*\\('
        'captures':
          '0':
            'name': 'punctuation.definition.string.pg'
          '1':
            'name': 'support.function.pg'
        'end': '\\)'
        'name': 'string.regexp.compile.nested_parens.pg'
        'patterns': [
          {
            'comment': 'This is to prevent thinks like qr/foo$/ to treat $/ as a variable'
            'match': '\\$(?=[^\\s\\w\\\'\\{\\[\\(\\<])'
          }
          {
            'include': '#escaped_char'
          }
          {
            'include': '#variable'
          }
          {
            'include': '#nested_parens_interpolated'
          }
        ]
      }
      {
        'begin': '(qr)\\s*\\\''
        'captures':
          '0':
            'name': 'punctuation.definition.string.pg'
          '1':
            'name': 'support.function.pg'
        'end': '\\\''
        'name': 'string.regexp.compile.single-quote.pg'
        'patterns': [
          {
            'include': '#escaped_char'
          }
        ]
      }
      {
        'begin': '(qr)\\s*([^\\s\\w\\\'\\{\\[\\(\\<])'
        'captures':
          '0':
            'name': 'punctuation.definition.string.pg'
          '1':
            'name': 'support.function.pg'
        'end': '\\2'
        'name': 'string.regexp.compile.simple-delimiter.pg'
        'patterns': [
          {
            'comment': 'This is to prevent thinks like qr/foo$/ to treat $/ as a variable'
            'match': '\\$(?=[^\\s\\w\\\'\\{\\[\\(\\<])'
            'name': 'keyword.control.anchor.pg'
          }
          {
            'include': '#escaped_char'
          }
          {
            'include': '#variable'
          }
          {
            'include': '#nested_parens_interpolated'
          }
        ]
      }
    ]
  }
  {
    'applyEndPatternLast': 1
    'begin': '(?<!\\{|\\+|\\-)\\b(?=m\\s*[^\\sa-zA-Z0-9])'
    'comment': 'string.regexp.find-m.pg'
    'end': '((([egimosxradlupc]*)))(?=(\\s+\\S|\\s*[;\\,\\#\\{\\}\\)]|$))'
    'endCaptures':
      '1':
        'name': 'string.regexp.find-m.pg'
      '2':
        'name': 'punctuation.definition.string.pg'
      '3':
        'name': 'keyword.control.regexp-option.pg'
    'patterns': [
      {
        'begin': '(m)\\s*\\{'
        'captures':
          '0':
            'name': 'punctuation.definition.string.pg'
          '1':
            'name': 'support.function.pg'
        'end': '\\}'
        'name': 'string.regexp.find-m.nested_braces.pg'
        'patterns': [
          {
            'include': '#escaped_char'
          }
          {
            'include': '#variable'
          }
          {
            'include': '#nested_braces_interpolated'
          }
        ]
      }
      {
        'begin': '(m)\\s*\\['
        'captures':
          '0':
            'name': 'punctuation.definition.string.pg'
          '1':
            'name': 'support.function.pg'
        'end': '\\]'
        'name': 'string.regexp.find-m.nested_brackets.pg'
        'patterns': [
          {
            'include': '#escaped_char'
          }
          {
            'include': '#variable'
          }
          {
            'include': '#nested_brackets_interpolated'
          }
        ]
      }
      {
        'begin': '(m)\\s*<'
        'captures':
          '0':
            'name': 'punctuation.definition.string.pg'
          '1':
            'name': 'support.function.pg'
        'end': '>'
        'name': 'string.regexp.find-m.nested_ltgt.pg'
        'patterns': [
          {
            'include': '#escaped_char'
          }
          {
            'include': '#variable'
          }
          {
            'include': '#nested_ltgt_interpolated'
          }
        ]
      }
      {
        'begin': '(m)\\s*\\('
        'captures':
          '0':
            'name': 'punctuation.definition.string.pg'
          '1':
            'name': 'support.function.pg'
        'end': '\\)'
        'name': 'string.regexp.find-m.nested_parens.pg'
        'patterns': [
          {
            'include': '#escaped_char'
          }
          {
            'include': '#variable'
          }
          {
            'include': '#nested_parens_interpolated'
          }
        ]
      }
      {
        'begin': '(m)\\s*\\\''
        'captures':
          '0':
            'name': 'punctuation.definition.string.pg'
          '1':
            'name': 'support.function.pg'
        'end': '\\\''
        'name': 'string.regexp.find-m.single-quote.pg'
        'patterns': [
          {
            'include': '#escaped_char'
          }
        ]
      }
      {
        'begin': '(?<!\\{|\\+|\\-)(m)\\s*([^\\sa-zA-Z0-9\\\'\\{\\[\\(\\<])'
        'captures':
          '0':
            'name': 'punctuation.definition.string.pg'
          '1':
            'name': 'support.function.pg'
        'end': '\\2'
        'name': 'string.regexp.find-m.simple-delimiter.pg'
        'patterns': [
          {
            'comment': 'This is to prevent thinks like qr/foo$/ to treat $/ as a variable'
            'match': '\\$(?=[^\\sa-zA-Z0-9\\\'\\{\\[\\(\\<])'
            'name': 'keyword.control.anchor.pg'
          }
          {
            'include': '#escaped_char'
          }
          {
            'include': '#variable'
          }
          {
            'begin': '\\['
            'end': '\\]'
            'patterns': [
              {
                'comment': 'This is to prevent thinks like qr/foo$/ to treat $/ as a variable'
                'match': '\\$(?=[^\\s\\w\\\'\\{\\[\\(\\<])'
                'name': 'keyword.control.anchor.pg'
              }
              {
                'include': '#escaped_char'
              }
            ]
          }
          {
            'include': '#nested_parens_interpolated'
          }
        ]
      }
    ]
  }
  {
    'applyEndPatternLast': 1
    'begin': '\\b(?=(?<!\\&)(s)(\\s+\\S|\\s*[;\\,\\#\\{\\}\\(\\)\\[<]|$))'
    'comment': 'string.regexp.replace.pg'
    'end': '((([egimosxradlupc]*)))(?=(\\s+\\S|\\s*[;\\,\\#\\}\\)\\]>]|$))'
    'endCaptures':
      '1':
        'name': 'string.regexp.replace.pg'
      '2':
        'name': 'punctuation.definition.string.pg'
      '3':
        'name': 'keyword.control.regexp-option.pg'
    'patterns': [
      {
        'begin': '(s)\\s*\\{'
        'captures':
          '0':
            'name': 'punctuation.definition.string.pg'
          '1':
            'name': 'support.function.pg'
        'end': '\\}'
        'name': 'string.regexp.nested_braces.pg'
        'patterns': [
          {
            'include': '#escaped_char'
          }
          {
            'include': '#nested_braces'
          }
        ]
      }
      {
        'begin': '(s)\\s*\\['
        'captures':
          '0':
            'name': 'punctuation.definition.string.pg'
          '1':
            'name': 'support.function.pg'
        'end': '\\]'
        'name': 'string.regexp.nested_brackets.pg'
        'patterns': [
          {
            'include': '#escaped_char'
          }
          {
            'include': '#nested_brackets'
          }
        ]
      }
      {
        'begin': '(s)\\s*<'
        'captures':
          '0':
            'name': 'punctuation.definition.string.pg'
          '1':
            'name': 'support.function.pg'
        'end': '>'
        'name': 'string.regexp.nested_ltgt.pg'
        'patterns': [
          {
            'include': '#escaped_char'
          }
          {
            'include': '#nested_ltgt'
          }
        ]
      }
      {
        'begin': '(s)\\s*\\('
        'captures':
          '0':
            'name': 'punctuation.definition.string.pg'
          '1':
            'name': 'support.function.pg'
        'end': '\\)'
        'name': 'string.regexp.nested_parens.pg'
        'patterns': [
          {
            'include': '#escaped_char'
          }
          {
            'include': '#nested_parens'
          }
        ]
      }
      {
        'begin': '\\{'
        'captures':
          '0':
            'name': 'punctuation.definition.string.pg'
        'end': '\\}'
        'name': 'string.regexp.format.nested_braces.pg'
        'patterns': [
          {
            'include': '#escaped_char'
          }
          {
            'include': '#variable'
          }
          {
            'include': '#nested_braces_interpolated'
          }
        ]
      }
      {
        'begin': '\\['
        'captures':
          '0':
            'name': 'punctuation.definition.string.pg'
        'end': '\\]'
        'name': 'string.regexp.format.nested_brackets.pg'
        'patterns': [
          {
            'include': '#escaped_char'
          }
          {
            'include': '#variable'
          }
          {
            'include': '#nested_brackets_interpolated'
          }
        ]
      }
      {
        'begin': '<'
        'captures':
          '0':
            'name': 'punctuation.definition.string.pg'
        'end': '>'
        'name': 'string.regexp.format.nested_ltgt.pg'
        'patterns': [
          {
            'include': '#escaped_char'
          }
          {
            'include': '#variable'
          }
          {
            'include': '#nested_ltgt_interpolated'
          }
        ]
      }
      {
        'begin': '\\('
        'captures':
          '0':
            'name': 'punctuation.definition.string.pg'
        'end': '\\)'
        'name': 'string.regexp.format.nested_parens.pg'
        'patterns': [
          {
            'include': '#escaped_char'
          }
          {
            'include': '#variable'
          }
          {
            'include': '#nested_parens_interpolated'
          }
        ]
      }
      {
        'begin': '\''
        'captures':
          '0':
            'name': 'punctuation.definition.string.pg'
        'end': '\''
        'name': 'string.regexp.format.single_quote.pg'
        'patterns': [
          {
            'match': '\\\\[\'\\\\]'
            'name': 'constant.character.escape.pg'
          }
        ]
      }
      {
        'begin': '([^\\s\\w\\[({<;])'
        'captures':
          '0':
            'name': 'punctuation.definition.string.pg'
        'end': '\\1'
        'name': 'string.regexp.format.simple_delimiter.pg'
        'patterns': [
          {
            'include': '#escaped_char'
          }
          {
            'include': '#variable'
          }
        ]
      }
      {
        'match': '\\s+'
      }
    ]
  }
  {
    'begin': '\\b(?=s([^\\sa-zA-Z0-9\\[({<]).*\\1([egimosxradlupc]*)([\\}\\)\\;\\,]|\\s+))'
    'comment': 'string.regexp.replaceXXX'
    'end': '((([egimosxradlupc]*)))(?=([\\}\\)\\;\\,]|\\s+|$))'
    'endCaptures':
      '1':
        'name': 'string.regexp.replace.pg'
      '2':
        'name': 'punctuation.definition.string.pg'
      '3':
        'name': 'keyword.control.regexp-option.pg'
    'patterns': [
      {
        'begin': '(s\\s*)([^\\sa-zA-Z0-9\\[({<])'
        'captures':
          '0':
            'name': 'punctuation.definition.string.pg'
          '1':
            'name': 'support.function.pg'
        'end': '(?=\\2)'
        'name': 'string.regexp.replaceXXX.simple_delimiter.pg'
        'patterns': [
          {
            'include': '#escaped_char'
          }
        ]
      }
      {
        'begin': '\''
        'captures':
          '0':
            'name': 'punctuation.definition.string.pg'
        'end': '\''
        'name': 'string.regexp.replaceXXX.format.single_quote.pg'
        'patterns': [
          {
            'match': '\\\\[\'\\\\]'
            'name': 'constant.character.escape.pg.pg'
          }
        ]
      }
      {
        'begin': '([^\\sa-zA-Z0-9\\[({<])'
        'captures':
          '0':
            'name': 'punctuation.definition.string.pg'
        'end': '\\1'
        'name': 'string.regexp.replaceXXX.format.simple_delimiter.pg'
        'patterns': [
          {
            'include': '#escaped_char'
          }
          {
            'include': '#variable'
          }
        ]
      }
    ]
  }
  {
    'begin': '\\b(?=(?<!\\\\)s\\s*([^\\s\\w\\[({<>]))'
    'comment': 'Multiline regex replace using the "x" modificator'
    'end': '((([egimosradlupc]*x[egimosradlupc]*)))\\b'
    'endCaptures':
      '1':
        'name': 'string.regexp.replace.pg'
      '2':
        'name': 'punctuation.definition.string.pg'
      '3':
        'name': 'keyword.control.regexp-option.pg'
    'patterns': [
      {
        'begin': '(s)\\s*(.)'
        'captures':
          '0':
            'name': 'punctuation.definition.string.pg'
          '1':
            'name': 'support.function.pg'
        'end': '(?=\\2)'
        'name': 'string.regexp.replace.extended.simple_delimiter.pg'
        'patterns': [
          {
            'include': '#escaped_char'
          }
        ]
      }
      {
        'begin': '\''
        'captures':
          '0':
            'name': 'punctuation.definition.string.pg'
        'end': '\'(?=[egimosradlupc]*x[egimosradlupc]*)\\b'
        'name': 'string.regexp.replace.extended.simple_delimiter.pg'
        'patterns': [
          {
            'include': '#escaped_char'
          }
        ]
      }
      {
        'begin': '(.)'
        'captures':
          '0':
            'name': 'punctuation.definition.string.pg'
        'end': '\\1(?=[egimosradlupc]*x[egimosradlupc]*)\\b'
        'name': 'string.regexp.replace.extended.simple_delimiter.pg'
        'patterns': [
          {
            'include': '#escaped_char'
          }
          {
            'include': '#variable'
          }
        ]
      }
    ]
  }
  {
    'begin': '(?<=\\(|\\{|~|&|\\||if|unless|^)\\s*((\\/))'
    'beginCaptures':
      '1':
        'name': 'string.regexp.find.pg'
      '2':
        'name': 'punctuation.definition.string.pg'
    'end': '((\\1([egimosxradlupc]*)))(?=(\\s+\\S|\\s*[;\\,\\#\\{\\}\\)]|$))'
    'endCaptures':
      '1':
        'name': 'string.regexp.find.pg'
      '2':
        'name': 'punctuation.definition.string.pg'
      '3':
        'name': 'keyword.control.regexp-option.pg'
    'contentName': 'string.regexp.find.pg'
    'patterns': [
      {
        'comment': 'This is to prevent thinks like /foo$/ to treat $/ as a variable'
        'match': '\\$(?=\\/)'
        'name': 'keyword.control.anchor.pg'
      }
      {
        'include': '#escaped_char'
      }
      {
        'include': '#variable'
      }
    ]
  }
  {
    'captures':
      '1':
        'name': 'constant.other.key.pg'
    'match': '\\b(\\w+)\\s*(?==>)'
  }
  {
    'match': '(?<={)\\s*\\w+\\s*(?=})'
    'name': 'constant.other.bareword.pg'
  }
  {
    'captures':
      '1':
        'name': 'keyword.control.pg'
      '2':
        'name': 'entity.name.type.class.pg'
    'match': '^\\s*(package)\\s+([^\\s;]+)'
    'name': 'meta.class.pg'
  }
  {
    'captures':
      '1':
        'name': 'storage.type.sub.pg'
      '2':
        'name': 'entity.name.function.pg'
      '3':
        'name': 'storage.type.method.pg'
    'match': '\\b(sub)(?:\\s+([-a-zA-Z0-9_]+))?\\s*(?:\\([\\$\\@\\*;]*\\))?[^\\w\\{]'
    'name': 'meta.function.pg'
  }
  {
    'captures':
      '1':
        'name': 'entity.name.function.pg'
      '2':
        'name': 'punctuation.definition.parameters.pg'
      '3':
        'name': 'variable.parameter.function.pg'
    'match': '^\\s*(BEGIN|UNITCHECK|CHECK|INIT|END|DESTROY)\\b'
    'name': 'meta.function.pg'
  }
  {
    'begin': '^(?=(\\t| {4}))'
    'end': '(?=[^\\t\\s])'
    'name': 'meta.leading-tabs'
    'patterns': [
      {
        'captures':
          '1':
            'name': 'meta.odd-tab'
          '2':
            'name': 'meta.even-tab'
        'match': '(\\t| {4})(\\t| {4})?'
      }
    ]
  }
  {
    'captures':
      '1':
        'name': 'support.function.pg'
      '2':
        'name': 'punctuation.definition.string.pg'
      '5':
        'name': 'punctuation.definition.string.pg'
      '8':
        'name': 'punctuation.definition.string.pg'
    'match': '\\b(tr|y)\\s*([^A-Za-z0-9\\s])(.*?)(?<!\\\\)(\\\\{2})*(\\2)(.*?)(?<!\\\\)(\\\\{2})*(\\2)'
    'name': 'string.regexp.replace.pg'
  }
  {
    'match': '\\b(__FILE__|__LINE__|__PACKAGE__|__SUB__)\\b'
    'name': 'constant.language.pg'
  }
  {
    'begin': '\\b(__DATA__|__END__)\\n?'
    'captures':
      '1':
        'name': 'constant.language.pg'
    'contentName': 'text.embedded.pg'
  }
  {
    'match': '(?<!->)\\b(continue|die|do|else|elsif|exit|for|foreach|goto|if|last|next|redo|return|select|unless|until|wait|while|switch|case|require|use|eval)\\b'
    'name': 'keyword.control.pg'
  }
  {
    'match': '\\b(my|our|local)\\b'
    'name': 'storage.modifier.pg'
  }
  {
    'match': '(?<!\\w)\\-[rwx0RWXOezsfdlpSbctugkTBMAC]\\b'
    'name': 'keyword.operator.filetest.pg'
  }
  {
    'match': '\\b(and|or|xor|as|not)\\b'
    'name': 'keyword.operator.logical.pg'
  }
  {
    'match': '(<=>|=>|->)'
    'name': 'keyword.operator.comparison.pg'
  }
  {
    'begin': '(((<<) *"HTML"))(.*)\\n?'
    'captures':
      '1':
        'name': 'punctuation.definition.string.pg'
      '2':
        'name': 'string.unquoted.heredoc.doublequote.pg'
      '3':
        'name': 'punctuation.definition.heredoc.pg'
      '4':
        'patterns': [
          {
            'include': '$self'
          }
        ]
    'contentName': 'text.html.embedded.pg'
    'end': '(^HTML$)'
    'patterns': [
      {
        'include': '#escaped_char'
      }
      {
        'include': '#variable'
      }
      {
        'include': 'text.html.basic'
      }
    ]
  }
  {
    'begin': '(((<<) *"XML"))(.*)\\n?'
    'captures':
      '1':
        'name': 'punctuation.definition.string.pg'
      '2':
        'name': 'string.unquoted.heredoc.doublequote.pg'
      '3':
        'name': 'punctuation.definition.heredoc.pg'
      '4':
        'patterns': [
          {
            'include': '$self'
          }
        ]
    'contentName': 'text.xml.embedded.pg'
    'end': '(^XML$)'
    'patterns': [
      {
        'include': '#escaped_char'
      }
      {
        'include': '#variable'
      }
      {
        'include': 'text.xml'
      }
    ]
  }
  {
    'begin': '(((<<) *"CSS"))(.*)\\n?'
    'captures':
      '1':
        'name': 'punctuation.definition.string.pg'
      '2':
        'name': 'string.unquoted.heredoc.doublequote.pg'
      '3':
        'name': 'punctuation.definition.heredoc.pg'
      '4':
        'patterns': [
          {
            'include': '$self'
          }
        ]
    'contentName': 'text.css.embedded.pg'
    'end': '(^CSS$)'
    'patterns': [
      {
        'include': '#escaped_char'
      }
      {
        'include': '#variable'
      }
      {
        'include': 'source.css'
      }
    ]
  }
  {
    'begin': '(((<<) *"JAVASCRIPT"))(.*)\\n?'
    'captures':
      '1':
        'name': 'punctuation.definition.string.pg'
      '2':
        'name': 'string.unquoted.heredoc.doublequote.pg'
      '3':
        'name': 'punctuation.definition.heredoc.pg'
      '4':
        'patterns': [
          {
            'include': '$self'
          }
        ]
    'contentName': 'source.js.embedded.pg'
    'end': '(^JAVASCRIPT$)'
    'patterns': [
      {
        'include': '#escaped_char'
      }
      {
        'include': '#variable'
      }
      {
        'include': 'source.js'
      }
    ]
  }
  {
    'begin': '(((<<) *"SQL"))(.*)\\n?'
    'captures':
      '1':
        'name': 'punctuation.definition.string.pg'
      '2':
        'name': 'string.unquoted.heredoc.doublequote.pg'
      '3':
        'name': 'punctuation.definition.heredoc.pg'
      '4':
        'patterns': [
          {
            'include': '$self'
          }
        ]
    'contentName': 'source.sql.embedded.pg'
    'end': '(^SQL$)'
    'patterns': [
      {
        'include': '#escaped_char'
      }
      {
        'include': '#variable'
      }
      {
        'include': 'source.sql'
      }
    ]
  }
  {
    'begin': '(((<<) *"POSTSCRIPT"))(.*)\\n?'
    'captures':
      '1':
        'name': 'punctuation.definition.string.pg'
      '2':
        'name': 'string.unquoted.heredoc.doublequote.pg'
      '3':
        'name': 'punctuation.definition.heredoc.pg'
      '4':
        'patterns': [
          {
            'include': '$self'
          }
        ]
    'contentName': 'text.postscript.embedded.pg'
    'end': '(^POSTSCRIPT$)'
    'patterns': [
      {
        'include': '#escaped_char'
      }
      {
        'include': '#variable'
      }
      {
        'include': 'source.postscript'
      }
    ]
  }
  {
    'begin': '(((<<) *"([^"]*)"))(.*)\\n?'
    'captures':
      '1':
        'name': 'punctuation.definition.string.pg'
      '2':
        'name': 'string.unquoted.heredoc.doublequote.pg'
      '3':
        'name': 'punctuation.definition.heredoc.pg'
      '5':
        'patterns': [
          {
            'include': '$self'
          }
        ]
    'contentName': 'string.unquoted.heredoc.doublequote.pg'
    'end': '(^\\4$)'
    'patterns': [
      {
        'include': '#escaped_char'
      }
      {
        'include': '#variable'
      }
    ]
  }
  {
    'begin': '(((<<) *\'HTML\'))(.*)\\n?'
    'captures':
      '1':
        'name': 'punctuation.definition.string.pg'
      '2':
        'name': 'string.unquoted.heredoc.quote.pg'
      '3':
        'name': 'punctuation.definition.heredoc.pg'
      '4':
        'patterns': [
          {
            'include': '$self'
          }
        ]
    'contentName': 'text.html.embedded.pg'
    'end': '(^HTML$)'
    'patterns': [
      {
        'include': 'text.html.basic'
      }
    ]
  }
  {
    'begin': '(((<<) *\'XML\'))(.*)\\n?'
    'captures':
      '1':
        'name': 'punctuation.definition.string.pg'
      '2':
        'name': 'string.unquoted.heredoc.quote.pg'
      '3':
        'name': 'punctuation.definition.heredoc.pg'
      '4':
        'patterns': [
          {
            'include': '$self'
          }
        ]
    'contentName': 'text.xml.embedded.pg'
    'end': '(^XML$)'
    'patterns': [
      {
        'include': 'text.xml'
      }
    ]
  }
  {
    'begin': '(((<<) *\'CSS\'))(.*)\\n?'
    'captures':
      '1':
        'name': 'punctuation.definition.string.pg'
      '2':
        'name': 'string.unquoted.heredoc.quote.pg'
      '3':
        'name': 'punctuation.definition.heredoc.pg'
      '4':
        'patterns': [
          {
            'include': '$self'
          }
        ]
    'contentName': 'text.css.embedded.pg'
    'end': '(^CSS$)'
    'patterns': [
      {
        'include': 'source.css'
      }
    ]
  }
  {
    'begin': '(((<<) *\'JAVASCRIPT\'))(.*)\\n?'
    'captures':
      '1':
        'name': 'punctuation.definition.string.pg'
      '2':
        'name': 'string.unquoted.heredoc.quote.pg'
      '3':
        'name': 'punctuation.definition.heredoc.pg'
      '4':
        'patterns': [
          {
            'include': '$self'
          }
        ]
    'contentName': 'source.js.embedded.pg'
    'end': '(^JAVASCRIPT$)'
    'patterns': [
      {
        'include': 'source.js'
      }
    ]
  }
  {
    'begin': '(((<<) *\'SQL\'))(.*)\\n?'
    'captures':
      '1':
        'name': 'punctuation.definition.string.pg'
      '2':
        'name': 'string.unquoted.heredoc.quote.pg'
      '3':
        'name': 'punctuation.definition.heredoc.pg'
      '4':
        'patterns': [
          {
            'include': '$self'
          }
        ]
    'contentName': 'source.sql.embedded.pg'
    'end': '(^SQL$)'
    'patterns': [
      {
        'include': 'source.sql'
      }
    ]
  }
  {
    'begin': '(((<<) *\'POSTSCRIPT\'))(.*)\\n?'
    'captures':
      '1':
        'name': 'punctuation.definition.string.pg'
      '2':
        'name': 'string.unquoted.heredoc.quote.pg'
      '3':
        'name': 'punctuation.definition.heredoc.pg'
      '4':
        'patterns': [
          {
            'include': '$self'
          }
        ]
    'contentName': 'source.postscript.embedded.pg'
    'end': '(^POSTSCRIPT)'
    'patterns': [
      {
        'include': 'source.postscript'
      }
    ]
  }
  {
    'begin': '(((<<) *\'([^\']*)\'))(.*)\\n?'
    'captures':
      '1':
        'name': 'punctuation.definition.string.pg'
      '2':
        'name': 'string.unquoted.heredoc.quote.pg'
      '3':
        'name': 'punctuation.definition.heredoc.pg'
      '5':
        'patterns': [
          {
            'include': '$self'
          }
        ]
    'contentName': 'string.unquoted.heredoc.quote.pg'
    'end': '(^\\4$)'
  }
  {
    'begin': '(((<<) *\\\\((?![=\\d\\$\\( ])[^;,\'"`\\s\\)]*)))(.*)\\n?'
    'captures':
      '1':
        'name': 'punctuation.definition.string.pg'
      '2':
        'name': 'string.unquoted.heredoc.quote.pg'
      '3':
        'name': 'punctuation.definition.heredoc.pg'
      '5':
        'patterns': [
          {
            'include': '$self'
          }
        ]
    'contentName': 'string.unquoted.heredoc.quote.pg'
    'end': '(^\\4$)'
  }
  {
    'begin': '(((<<) *`([^`]*)`))(.*)\\n?'
    'captures':
      '1':
        'name': 'punctuation.definition.string.pg'
      '2':
        'name': 'string.unquoted.heredoc.backtick.pg'
      '3':
        'name': 'punctuation.definition.heredoc.pg'
      '5':
        'patterns': [
          {
            'include': '$self'
          }
        ]
    'contentName': 'string.unquoted.heredoc.backtick.pg'
    'end': '(^\\4$)'
    'patterns': [
      {
        'include': '#escaped_char'
      }
      {
        'include': '#variable'
      }
    ]
  }
  {
    'begin': '(((<<) *HTML\\b))(.*)\\n?'
    'captures':
      '1':
        'name': 'punctuation.definition.string.pg'
      '2':
        'name': 'string.unquoted.heredoc.pg'
      '3':
        'name': 'punctuation.definition.heredoc.pg'
      '4':
        'patterns': [
          {
            'include': '$self'
          }
        ]
    'contentName': 'text.html.embedded.pg'
    'end': '(^HTML$)'
    'patterns': [
      {
        'include': '#escaped_char'
      }
      {
        'include': '#variable'
      }
      {
        'include': 'text.html.basic'
      }
    ]
  }
  {
    'begin': '(((<<) *XML\\b))(.*)\\n?'
    'captures':
      '1':
        'name': 'punctuation.definition.string.pg'
      '2':
        'name': 'string.unquoted.heredoc.pg'
      '3':
        'name': 'punctuation.definition.heredoc.pg'
      '4':
        'patterns': [
          {
            'include': '$self'
          }
        ]
    'contentName': 'text.xml.embedded.pg'
    'end': '(^XML$)'
    'patterns': [
      {
        'include': '#escaped_char'
      }
      {
        'include': '#variable'
      }
      {
        'include': 'text.xml'
      }
    ]
  }
  {
    'begin': '(((<<) *JAVASCRIPT\\b))(.*)\\n?'
    'captures':
      '1':
        'name': 'punctuation.definition.string.pg'
      '2':
        'name': 'string.unquoted.heredoc.pg'
      '3':
        'name': 'punctuation.definition.heredoc.pg'
      '4':
        'patterns': [
          {
            'include': '$self'
          }
        ]
    'contentName': 'source.js.embedded.pg'
    'end': '(^JAVASCRIPT$)'
    'patterns': [
      {
        'include': '#escaped_char'
      }
      {
        'include': '#variable'
      }
      {
        'include': 'source.js'
      }
    ]
  }
  {
    'begin': '(((<<) *SQL\\b))(.*)\\n?'
    'captures':
      '1':
        'name': 'punctuation.definition.string.pg'
      '2':
        'name': 'string.unquoted.heredoc.pg'
      '3':
        'name': 'punctuation.definition.heredoc.pg'
      '4':
        'patterns': [
          {
            'include': '$self'
          }
        ]
    'contentName': 'source.sql.embedded.pg'
    'end': '(^SQL$)'
    'patterns': [
      {
        'include': '#escaped_char'
      }
      {
        'include': '#variable'
      }
      {
        'include': 'source.sql'
      }
    ]
  }
  {
    'begin': '(((<<) *POSTSCRIPT\\b))(.*)\\n?'
    'captures':
      '1':
        'name': 'punctuation.definition.string.pg'
      '2':
        'name': 'string.unquoted.heredoc.pg'
      '3':
        'name': 'punctuation.definition.heredoc.pg'
      '4':
        'patterns': [
          {
            'include': '$self'
          }
        ]
    'contentName': 'source.postscript.embedded.pg'
    'end': '(^POSTSCRIPT)'
    'patterns': [
      {
        'include': '#escaped_char'
      }
      {
        'include': '#variable'
      }
      {
        'include': 'source.postscript'
      }
    ]
  }
  {
    'begin': '(((<<) *((?![=\\d\\$\\( ])[^;,\'"`\\s\\)]*)))(.*)\\n?'
    'captures':
      '1':
        'name': 'punctuation.definition.string.pg'
      '2':
        'name': 'string.unquoted.heredoc.pg'
      '3':
        'name': 'punctuation.definition.heredoc.pg'
      '5':
        'patterns': [
          {
            'include': '$self'
          }
        ]
    'contentName': 'string.unquoted.heredoc.pg'
    'end': '(^\\4$)'
    'patterns': [
      {
        'include': '#escaped_char'
      }
      {
        'include': '#variable'
      }
    ]
  }
  {
    'begin': '\\bqq\\s*([^\\(\\{\\[\\<\\w\\s])'
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.pg'
    'end': '\\1'
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.pg'
    'name': 'string.quoted.other.qq.pg'
    'patterns': [
      {
        'include': '#escaped_char'
      }
      {
        'include': '#variable'
      }
    ]
  }
  {
    'begin': '\\bqx\\s*([^\'\\(\\{\\[\\<\\w\\s])'
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.pg'
    'end': '\\1'
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.pg'
    'name': 'string.interpolated.qx.pg'
    'patterns': [
      {
        'include': '#escaped_char'
      }
      {
        'include': '#variable'
      }
    ]
  }
  {
    'begin': '\\bqx\\s*\''
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.pg'
    'end': '\''
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.pg'
    'name': 'string.interpolated.qx.single-quote.pg'
    'patterns': [
      {
        'include': '#escaped_char'
      }
    ]
  }
  {
    'begin': '"'
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.pg'
    'end': '"'
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.pg'
    'name': 'string.quoted.double.pg'
    'patterns': [
      {
        'include': '#escaped_char'
      }
      {
        'include': '#variable'
      }
    ]
  }
  {
    'begin': '(?<!->)\\bqw?\\s*([^\\(\\{\\[\\<\\w\\s])'
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.pg'
    'end': '\\1'
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.pg'
    'name': 'string.quoted.other.q.pg'
  }
  {
    'begin': '\''
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.pg'
    'end': '\''
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.pg'
    'name': 'string.quoted.single.pg'
    'patterns': [
      {
        'match': '\\\\[\'\\\\]'
        'name': 'constant.character.escape.pg'
      }
    ]
  }
  {
    'begin': '`'
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.pg'
    'end': '`'
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.pg'
    'name': 'string.interpolated.pg'
    'patterns': [
      {
        'include': '#escaped_char'
      }
      {
        'include': '#variable'
      }
    ]
  }
  {
    'begin': '(?<!->)\\bqq\\s*\\('
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.pg'
    'end': '\\)'
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.pg'
    'name': 'string.quoted.other.qq-paren.pg'
    'patterns': [
      {
        'include': '#escaped_char'
      }
      {
        'include': '#nested_parens_interpolated'
      }
      {
        'include': '#variable'
      }
    ]
  }
  {
    'begin': '\\bqq\\s*\\{'
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.pg'
    'end': '\\}'
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.pg'
    'name': 'string.quoted.other.qq-brace.pg'
    'patterns': [
      {
        'include': '#escaped_char'
      }
      {
        'include': '#nested_braces_interpolated'
      }
      {
        'include': '#variable'
      }
    ]
  }
  {
    'begin': '\\bqq\\s*\\['
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.pg'
    'end': '\\]'
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.pg'
    'name': 'string.quoted.other.qq-bracket.pg'
    'patterns': [
      {
        'include': '#escaped_char'
      }
      {
        'include': '#nested_brackets_interpolated'
      }
      {
        'include': '#variable'
      }
    ]
  }
  {
    'begin': '\\bqq\\s*\\<'
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.pg'
    'end': '\\>'
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.pg'
    'name': 'string.quoted.other.qq-ltgt.pg'
    'patterns': [
      {
        'include': '#escaped_char'
      }
      {
        'include': '#nested_ltgt_interpolated'
      }
      {
        'include': '#variable'
      }
    ]
  }
  {
    'begin': '(?<!->)\\bqx\\s*\\('
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.pg'
    'end': '\\)'
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.pg'
    'name': 'string.interpolated.qx-paren.pg'
    'patterns': [
      {
        'include': '#escaped_char'
      }
      {
        'include': '#nested_parens_interpolated'
      }
      {
        'include': '#variable'
      }
    ]
  }
  {
    'begin': '\\bqx\\s*\\{'
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.pg'
    'end': '\\}'
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.pg'
    'name': 'string.interpolated.qx-brace.pg'
    'patterns': [
      {
        'include': '#escaped_char'
      }
      {
        'include': '#nested_braces_interpolated'
      }
      {
        'include': '#variable'
      }
    ]
  }
  {
    'begin': '\\bqx\\s*\\['
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.pg'
    'end': '\\]'
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.pg'
    'name': 'string.interpolated.qx-bracket.pg'
    'patterns': [
      {
        'include': '#escaped_char'
      }
      {
        'include': '#nested_brackets_interpolated'
      }
      {
        'include': '#variable'
      }
    ]
  }
  {
    'begin': '\\bqx\\s*\\<'
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.pg'
    'end': '\\>'
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.pg'
    'name': 'string.interpolated.qx-ltgt.pg'
    'patterns': [
      {
        'include': '#escaped_char'
      }
      {
        'include': '#nested_ltgt_interpolated'
      }
      {
        'include': '#variable'
      }
    ]
  }
  {
    'begin': '(?<!->)\\bqw?\\s*\\('
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.pg'
    'end': '\\)'
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.pg'
    'name': 'string.quoted.other.q-paren.pg'
    'patterns': [
      {
        'include': '#nested_parens'
      }
    ]
  }
  {
    'begin': '\\bqw?\\s*\\{'
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.pg'
    'end': '\\}'
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.pg'
    'name': 'string.quoted.other.q-brace.pg'
    'patterns': [
      {
        'include': '#nested_braces'
      }
    ]
  }
  {
    'begin': '\\bqw?\\s*\\['
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.pg'
    'end': '\\]'
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.pg'
    'name': 'string.quoted.other.q-bracket.pg'
    'patterns': [
      {
        'include': '#nested_brackets'
      }
    ]
  }
  {
    'begin': '\\bqw?\\s*\\<'
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.pg'
    'end': '\\>'
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.pg'
    'name': 'string.quoted.other.q-ltgt.pg'
    'patterns': [
      {
        'include': '#nested_ltgt'
      }
    ]
  }
  {
    'begin': '^__\\w+__'
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.pg'
    'end': '$'
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.pg'
    'name': 'string.unquoted.program-block.pg'
  }
  {
    'begin': '\\b(format)\\s+(\\w+)\\s*='
    'beginCaptures':
      '1':
        'name': 'support.function.pg'
      '2':
        'name': 'entity.name.function.format.pg'
    'end': '^\\.\\s*$'
    'name': 'meta.format.pg'
    'patterns': [
      {
        'include': '#line_comment'
      }
      {
        'include': '#variable'
      }
    ]
  }
  {
    'match': '\\b(x)\\s*(\\d+)\\b'
    'captures':
      '1':
        'name': 'support.function.pg'
      '2':
        'name': 'entity.name.function.pg'
  }
  {
    'match': '\\b(ARGV|DATA|ENV|SIG|STDERR|STDIN|STDOUT|atan2|bind|binmode|bless|caller|chdir|chmod|chomp|chop|chown|chr|chroot|close|closedir|cmp|connect|cos|crypt|dbmclose|dbmopen|defined|delete|dump|each|endgrent|endhostent|endnetent|endprotoent|endpwent|endservent|eof|eq|eval|exec|exists|exp|fcntl|fileno|flock|fork|formline|ge|getc|getgrent|getgrgid|getgrnam|gethostbyaddr|gethostbyname|gethostent|getlogin|getnetbyaddr|getnetbyname|getnetent|getpeername|getpgrp|getppid|getpriority|getprotobyname|getprotobynumber|getprotoent|getpwent|getpwnam|getpwuid|getservbyname|getservbyport|getservent|getsockname|getsockopt|glob|gmtime|grep|gt|hex|import|index|int|ioctl|join|keys|kill|lc|lcfirst|le|length|link|listen|local|localtime|log|lstat|lt|m|map|mkdir|msgctl|msgget|msgrcv|msgsnd|ne|no|oct|open|opendir|ord|pack|pipe|pop|pos|print|printf|push|quotemeta|rand|read|readdir|readlink|recv|ref|rename|reset|reverse|rewinddir|rindex|rmdir|s|scalar|seek|seekdir|semctl|semget|semop|send|setgrent|sethostent|setnetent|setpgrp|setpriority|setprotoent|setpwent|setservent|setsockopt|shift|shmctl|shmget|shmread|shmwrite|shutdown|sin|sleep|socket|socketpair|sort|splice|split|sprintf|sqrt|srand|stat|study|substr|symlink|syscall|sysopen|sysread|system|syswrite|tell|telldir|tie|tied|time|times|tr|truncate|uc|ucfirst|umask|undef|unlink|unpack|unshift|untie|utime|values|vec|waitpid|wantarray|warn|write|y)\\b'
    'name': 'support.function.pg'
  }
]
'repository':
  'escaped_char':
    'patterns': [
      {
        'match': '\\\\\\d+'
        'name': 'constant.character.escape.pg'
      }
      {
        'match': '\\\\c[^\\s\\\\]'
        'name': 'constant.character.escape.pg'
      }
      {
        'match': '\\\\g(?:\\{(?:\\w*|-\\d+)\\}|\\d+)'
        'name': 'constant.character.escape.pg'
      }
      {
        'match': '\\\\k(?:\\{\\w*\\}|<\\w*>|\'\\w*\')'
        'name': 'constant.character.escape.pg'
      }
      {
        'match': '\\\\N\\{[^\\}]*\\}'
        'name': 'constant.character.escape.pg'
      }
      {
        'match': '\\\\o\\{\\d*\\}'
        'name': 'constant.character.escape.pg'
      }
      {
        'match': '\\\\(?:p|P)(?:\\{\\w*\\}|P)'
        'name': 'constant.character.escape.pg'
      }
      {
        'match': '\\\\x(?:[0-9a-zA-Z]{2}|\\{\\w*\\})?'
        'name': 'constant.character.escape.pg'
      }
      {
        'match': '\\\\.'
        'name': 'constant.character.escape.pg'
      }
    ]
  'line_comment':
    'patterns': [
      {
        'begin': '(^[ \\t]+)?(?=#)'
        'beginCaptures':
          '1':
            'name': 'punctuation.whitespace.comment.leading.pg'
        'end': '(?!\\G)'
        'patterns': [
          {
            'begin': '#'
            'beginCaptures':
              '0':
                'name': 'punctuation.definition.comment.pg'
            'end': '\\n'
            'name': 'comment.line.number-sign.pg'
          }
        ]
      }
    ]
  'nested_braces':
    'begin': '\\{'
    'captures':
      '1':
        'name': 'punctuation.section.scope.pg'
    'end': '\\}'
    'patterns': [
      {
        'include': '#escaped_char'
      }
      {
        'include': '#nested_braces'
      }
    ]
  'nested_braces_interpolated':
    'begin': '\\{'
    'captures':
      '1':
        'name': 'punctuation.section.scope.pg'
    'end': '\\}'
    'patterns': [
      {
        'include': '#escaped_char'
      }
      {
        'include': '#variable'
      }
      {
        'include': '#nested_braces_interpolated'
      }
    ]
  'nested_brackets':
    'begin': '\\['
    'captures':
      '1':
        'name': 'punctuation.section.scope.pg'
    'end': '\\]'
    'patterns': [
      {
        'include': '#escaped_char'
      }
      {
        'include': '#nested_brackets'
      }
    ]
  'nested_brackets_interpolated':
    'begin': '\\['
    'captures':
      '1':
        'name': 'punctuation.section.scope.pg'
    'end': '\\]'
    'patterns': [
      {
        'include': '#escaped_char'
      }
      {
        'include': '#variable'
      }
      {
        'include': '#nested_brackets_interpolated'
      }
    ]
  'nested_ltgt':
    'begin': '<'
    'captures':
      '1':
        'name': 'punctuation.section.scope.pg'
    'end': '>'
    'patterns': [
      {
        'include': '#nested_ltgt'
      }
    ]
  'nested_ltgt_interpolated':
    'begin': '<'
    'captures':
      '1':
        'name': 'punctuation.section.scope.pg'
    'end': '>'
    'patterns': [
      {
        'include': '#variable'
      }
      {
        'include': '#nested_ltgt_interpolated'
      }
    ]
  'nested_parens':
    'begin': '\\('
    'captures':
      '1':
        'name': 'punctuation.section.scope.pg'
    'end': '\\)'
    'patterns': [
      {
        'include': '#escaped_char'
      }
      {
        'include': '#nested_parens'
      }
    ]
  'nested_parens_interpolated':
    'begin': '\\('
    'captures':
      '1':
        'name': 'punctuation.section.scope.pg'
    'end': '\\)'
    'patterns': [
      {
        'comment': 'This is to prevent thinks like qr/foo$/ to treat $/ as a variable'
        'match': '\\$(?=[^\\s\\w\\\'\\{\\[\\(\\<])'
        'name': 'keyword.control.anchor.pg'
      }
      {
        'include': '#escaped_char'
      }
      {
        'include': '#variable'
      }
      {
        'include': '#nested_parens_interpolated'
      }
    ]
  'variable':
    'patterns': [
      {
        'captures':
          '1':
            'name': 'punctuation.definition.variable.pg'
        'match': '(\\$)&(?![A-Za-z0-9_])'
        'name': 'variable.other.regexp.match.pg'
      }
      {
        'captures':
          '1':
            'name': 'punctuation.definition.variable.pg'
        'match': '(\\$)`(?![A-Za-z0-9_])'
        'name': 'variable.other.regexp.pre-match.pg'
      }
      {
        'captures':
          '1':
            'name': 'punctuation.definition.variable.pg'
        'match': '(\\$)\'(?![A-Za-z0-9_])'
        'name': 'variable.other.regexp.post-match.pg'
      }
      {
        'captures':
          '1':
            'name': 'punctuation.definition.variable.pg'
        'match': '(\\$)\\+(?![A-Za-z0-9_])'
        'name': 'variable.other.regexp.last-paren-match.pg'
      }
      {
        'captures':
          '1':
            'name': 'punctuation.definition.variable.pg'
        'match': '(\\$)"(?![A-Za-z0-9_])'
        'name': 'variable.other.readwrite.list-separator.pg'
      }
      {
        'captures':
          '1':
            'name': 'punctuation.definition.variable.pg'
        'match': '(\\$)0(?![A-Za-z0-9_])'
        'name': 'variable.other.predefined.program-name.pg'
      }
      {
        'captures':
          '1':
            'name': 'punctuation.definition.variable.pg'
        'match': '(\\$)[_ab\\*\\.\\/\\|,\\\\;#%=\\-~^:?!\\$<>\\(\\)\\[\\]@](?![A-Za-z0-9_])'
        'name': 'variable.other.predefined.pg'
      }
      {
        'captures':
          '1':
            'name': 'punctuation.definition.variable.pg'
        'match': '(\\$)[0-9]+(?![A-Za-z0-9_])'
        'name': 'variable.other.subpattern.pg'
      }
      {
        'captures':
          '1':
            'name': 'punctuation.definition.variable.pg'
        'match': '([\\$\\@\\%](#)?)([a-zA-Zx7f-xff\\$]|::)([a-zA-Z0-9_x7f-xff\\$]|::)*\\b'
        'name': 'variable.other.readwrite.global.pg'
      }
      {
        'captures':
          '1':
            'name': 'punctuation.definition.variable.pg'
          '2':
            'name': 'punctuation.definition.variable.pg'
        'match': '(\\$\\{)(?:[a-zA-Zx7f-xff\\$]|::)(?:[a-zA-Z0-9_x7f-xff\\$]|::)*(\\})'
        'name': 'variable.other.readwrite.global.pg'
      }
      {
        'captures':
          '1':
            'name': 'punctuation.definition.variable.pg'
        'match': '([\\$\\@\\%](#)?)[0-9_]\\b'
        'name': 'variable.other.readwrite.global.special.pg'
      }
    ]
